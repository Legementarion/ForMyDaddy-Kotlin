package com.lego.admin.formydaddy.activityimport android.os.Bundleimport android.support.design.widget.FloatingActionButtonimport android.support.design.widget.Snackbarimport android.view.Viewimport android.support.design.widget.NavigationViewimport android.support.v4.view.GravityCompatimport android.support.v4.widget.DrawerLayoutimport android.support.v7.app.ActionBarDrawerToggleimport android.support.v7.app.AppCompatActivityimport android.support.v7.widget.Toolbarimport android.view.Menuimport android.view.MenuItemimport com.arellomobile.mvp.MvpAppCompatActivityimport com.arellomobile.mvp.presenter.InjectPresenterimport com.lego.admin.formydaddy.Rimport com.lego.admin.formydaddy.presenter.MainPresenterimport com.lego.admin.formydaddy.presenter.MainViewclass PlayActivity : MvpAppCompatActivity(), NavigationView.OnNavigationItemSelectedListener, MainView {    @InjectPresenter    lateinit var mPresenter: MainPresenter    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_play)        val toolbar = findViewById(R.id.toolbar) as Toolbar        setSupportActionBar(toolbar)        val drawer = findViewById(R.id.drawer_layout) as DrawerLayout        val toggle = ActionBarDrawerToggle(                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close)        drawer.addDrawerListener(toggle)        toggle.syncState()        val navigationView = findViewById(R.id.nav_view) as NavigationView        navigationView.setNavigationItemSelectedListener(this)    }    override fun onBackPressed() {        val drawer = findViewById(R.id.drawer_layout) as DrawerLayout        if (drawer.isDrawerOpen(GravityCompat.START)) {            drawer.closeDrawer(GravityCompat.START)        } else {            super.onBackPressed()        }    }    override fun onCreateOptionsMenu(menu: Menu): Boolean {        // Inflate the menu; this adds items to the action bar if it is present.        menuInflater.inflate(R.menu.play, menu)        return true    }    override fun onNavigationItemSelected(item: MenuItem): Boolean {        // Handle navigation view item clicks here.        when (item.itemId) {            R.id.nav_game -> {                mPresenter.stopGame()                mPresenter.startGame(this)            }            R.id.nav_stats -> mPresenter.showStats(this)            R.id.nav_help -> mPresenter.showRules(this)            R.id.nav_exit -> finish()            else -> {            }        }        val drawer = findViewById(R.id.drawer_layout) as DrawerLayout        drawer.closeDrawer(GravityCompat.START)        return true    }}