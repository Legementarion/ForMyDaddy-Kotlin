package com.lego.admin.formydaddy.logicimport android.util.Pairimport android.view.Viewimport com.lego.admin.formydaddy.Rimport java.util.*class Game {    private val DECK_SIZE = 28    var tree: MutableList<Node> = ArrayList()    fun Game() {        if (tree.isEmpty()) {            initGameDeck()        }        shuffle()        initGameTree()    }    private fun initGameDeck() {        var tempType = 0        loop@ for (tempValue in 0 until DECK_SIZE) {            val newNode = Node()            when (tempValue) {                7 -> tempType++                13 -> tempType++                18 -> tempType++                22 -> tempType++                25 -> tempType++                27 -> tempType++            }            newNode.value = Pair(tempType, tempValue)            tree.add(newNode)        }    }    private fun shuffle() {        tree.sort()    }    private fun initGameTree() {        var j = 7        var res = 13        tree.reverse()        loop@ for (i in 0 until DECK_SIZE) {            when (i) {                in 0 until 7 -> {                    tree[i] = Node(null, null)                }                else -> {                    if (i == res) {                        j--                        res = j - 1                    }                    tree[i].mother = tree[i - j]                    tree[i].father = tree[i - (j - 1)]                    tree[i - j].children.add(tree[i])                    tree[i - (j - 1)].children.add(tree[i])                }            }//            if (i + j < DECK_SIZE) {//                tree[i].children.add(tree[i + j])//                tree[i].children.add(tree[i + j + 1])//            }//////            when (i) {//                0 -> j++//                2 -> j++//                5 -> j++//                9 -> j++//                14 -> j++//                20 -> j++        }        tree.reverse()    }    fun stop() {        tree.forEach { v -> run { v.View.visibility = View.VISIBLE }.also { v.View.setImageResource(R.drawable.title) } }    }}